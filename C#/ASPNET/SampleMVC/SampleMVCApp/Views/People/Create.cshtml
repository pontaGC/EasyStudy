@model SampleMVCApp.Models.Person

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Person</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                @*検証結果の表示。ちなみに入力フォームは検証結果に戻ると再度フォームに戻るようになっている*@
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Mail" class="control-label"></label>
                <input asp-for="Mail" class="form-control" />
                <span asp-validation-for="Mail" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Age" class="control-label"></label>
                <input asp-for="Age" class="form-control" />
                <span asp-validation-for="Age" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@*追記*@
@section Scripts
{
    @*RenderPartialAsyncで「_ValidationScriptsPartial」という部分ビューを読み込んでいる
    「_ValidationScriptsPartial」内では、jQueryの検証関係のライブラリを読み込んでいる。
    これにより、フロントエンド側の値の検証が行える*@
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}